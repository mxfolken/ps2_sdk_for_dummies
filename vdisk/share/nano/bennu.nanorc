## Here is an example for BennuGD.
## By Rolando Fernandez Benavidez

syntax bennu "\.prg$"
comment "//"

# Constants.
color brightmagenta "\<[A-Z_][0-9A-Z_]+\>"
# Labels.
###color brightmagenta "^[[:space:]]*[A-Z_a-z]+:[[:space:]]*$"

color brightgreen "\<(float|double|bool|char|int|short|long|void|string|file|graph|x|y|z|size|radius|fixz|scalemodel)\>"
color brightred "\<(const|frame|loop|process|false|true|begin|struct|include|for|if|while|do|else|case|default|switch|end|program|import|global|private|)\>"
color brightred "\<(goto|continue|break|return)\>"
color brightmagenta "'([^'\]|(\\["'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"
color brightgreen "\<(_Pragma|__has_include|_Generic)\>"

# GCC builtins.
color cyan "__attribute__[[:space:]]*\(\([^)]*\)\)" "__(aligned|asm|builtin|hidden|inline|packed|restrict|section|typeof|weak)__"

# Strings.  In general you will want your strings and comments to come last,
# because highlighting rules are applied in the order they are read in.
color brightyellow ""([^"]|\\")*""
# Multiline strings.  This regex is VERY resource intensive,
# and sometimes colours things that shouldn't be coloured.
###color brightyellow start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""

# Preprocessor directives.
color brightgreen "#[[:space:]]*include[[:space:]]+((<[^>]*>)|("[^"]*"))"
color brightcyan start="^[[:space:]]*#[[:space:]]*(define|undef|if(n?def)?|elif|warning|error|pragma)\>" end="(\`|[^\\])$"
color brightcyan "^[[:space:]]*#[[:space:]]*(else|endif|include(_next)?)\>"

# Comments.
color brightcyan "//.*"
color brightcyan start="/\*" end="\*/"

# Reminders.
color brightwhite,yellow "\<(FIXME|TODO|XXX)\>"

# Trailing whitespace.
color ,green "[[:space:]]+$"
